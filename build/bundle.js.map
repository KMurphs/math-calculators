{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/Modal.svelte","../../src/utils/mathjax.utils.ts","../../src/utils/vector.utils.ts","../../src/App.utils.ts","../../src/components/TitleBar.svelte","../../src/components/CheckBoxToggleSwitch.svelte","../../src/components/MenuBar.svelte","../../node_modules/svelte/store/index.mjs","../../src/components/MathJaxNode.svelte","../../src/components/CheckBoxWithIcons.svelte","../../src/components/Input.svelte","../../src/components/VectorEditor.svelte","../../src/components/Operands.utils.ts","../../node_modules/tslib/tslib.es6.js","../../src/components/Operand.svelte","../../src/components/Operands.svelte","../../src/components/Results.svelte","../../src/utils/canvas.utils.ts","../../src/components/VectorCanvas.svelte","../../src/components/VectorCanvas.utils.ts","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.38.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\nimport About from \"./About.svelte\";\n\nexport let isVisible = false;\n\nimport { createEventDispatcher } from 'svelte';\nconst dispatch = createEventDispatcher();\nconst closeModal = () => dispatch('close');\n</script>\n\n\n\n\n\n\n\n<div class={`md-modal md-effect-12 ${isVisible ? 'md-show' : ''}`} id=\"modal-12\">\n    <div class=\"md-content\">\n        <h3>About</h3>\n        <div>\n            <About/>\n            <button class=\"md-close\" on:click={closeModal}>Close</button>\n        </div>\n    </div>\n</div>\n<div class=\"md-overlay\" on:click={closeModal}></div><!-- the overlay element -->\n\n\n\n\n\n\n\n\n<style>\n\n.md-modal {\n\tposition: fixed;\n\ttop: 50%;\n\tleft: 50%;\n\twidth: 50%;\n\tmax-width: 630px;\n\tmin-width: 320px;\n\theight: auto;\n\tz-index: 2000;\n\tvisibility: hidden;\n\t-webkit-backface-visibility: hidden;\n\t-moz-backface-visibility: hidden;\n\tbackface-visibility: hidden;\n\t-webkit-transform: translateX(-50%) translateY(-50%);\n\t-moz-transform: translateX(-50%) translateY(-50%);\n\t-ms-transform: translateX(-50%) translateY(-50%);\n\ttransform: translateX(-50%) translateY(-50%);\n}\n\n.md-show {\n\tvisibility: visible;\n}\n\n.md-overlay {\n\tposition: fixed;\n\twidth: 100%;\n\theight: 100%;\n\tvisibility: hidden;\n\ttop: 0;\n\tleft: 0;\n\tz-index: 1000;\n\topacity: 0;\n\tbackground: rgba(143,27,15,0.8);\n\tbackground: rgba(113, 113, 113, 0.8);\n\tbackground: var(--color-secondary);\n\t-webkit-transition: all 0.3s;\n\t-moz-transition: all 0.3s;\n\ttransition: all 0.3s;\n}\n\n.md-show ~ .md-overlay {\n\topacity: 1;\n\tvisibility: visible;\n}\n\n/* Content styles */\n.md-content {\n\tcolor: #fff;\n\tcolor: #333;\n\tcolor: var(--color-primary-dark);\n\tbackground: #e74c3c;\n\tbackground: #dedede;\n\tbackground: var(--color-primary-light);\n\tposition: relative;\n\tborder-radius: 3px;\n\tmargin: 0 auto;\n\tline-height: 1.5;\n}\n\n.md-content h3 {\n\tmargin: 0;\n\tpadding: 0.4em;\n\ttext-align: center;\n\tfont-size: 2.4em;\n\tfont-weight: 300;\n\topacity: 0.8;\n\tbackground: rgba(0,0,0,0.1);\n\tborder-radius: 3px 3px 0 0;\n}\n\n.md-content > div {\n\tpadding: 15px 40px 30px;\n\tmargin: 0;\n\tfont-weight: 300;\n\tfont-size: 1rem;\n}\n\n\n.md-content button {\n\tdisplay: block;\n\tmargin: 0 auto;\n\tfont-size: 0.8em;\n}\n\n/* Effect 12:  Just me */\n.md-effect-12 .md-content {\n\t-webkit-transform: scale(0.8);\n\t-moz-transform: scale(0.8);\n\t-ms-transform: scale(0.8);\n\ttransform: scale(0.8);\n\topacity: 0;\n\t-webkit-transition: all 0.3s;\n\t-moz-transition: all 0.3s;\n\ttransition: all 0.3s;\n}\n\n.md-show.md-effect-12 ~ .md-overlay {\n\tbackground: #e74c3c;\n\tbackground: #dedede;\n\tbackground: var(--color-secondary-lighter);\n} \n\n.md-effect-12 .md-content h3,\n.md-effect-12 .md-content {\n\tbackground: transparent;\n}\n\n.md-show.md-effect-12 .md-content {\n\t-webkit-transform: scale(1);\n\t-moz-transform: scale(1);\n\t-ms-transform: scale(1);\n\ttransform: scale(1);\n\topacity: 1;\n}\n.md-close{\n\tpadding: .8rem 1rem;\n\tborder-radius: 8px;\n\tmin-width: 15rem;\n\tbackground: #333;\n\tbackground: var(--color-secondary-dark);\n\tcolor: #eee;\n\tcolor: var(--color-primary-light);\n\tfont-weight: bold;\n\tcursor: pointer;\n}\n.md-close{\n\tmargin-top: 5rem !important;\n}\n.md-close:hover{\n\tbackground: var(--color-secondary-darker);\n}\n.md-close:focus{\n\tbox-shadow: 0 0 0 2px rgba(0, 97, 127, 0.5);\n}\n:global(.md-content p){\n\tmargin-bottom: 1rem;\n}\n</style>","/**\r\n * Converts a cartesian vector (with components x and y) to a tex string\r\n * @date 2021-06-13\r\n * @param {number} xComponent:number\r\n * @param {number} yComponent:number\r\n * @returns {string}\r\n */\r\nconst texFromCartesianVector = (xComponent, yComponent) => `${xComponent.toFixed(2)} \\\\(\\\\overrightarrow{e_x}\\\\) + ${yComponent.toFixed(2)} \\\\(\\\\overrightarrow{e_y}\\\\)`;\r\n/**\r\n * Converts a polar vector (with components radius and angle(degrees)) to a tex string\r\n * @date 2021-06-13\r\n * @param {number} polarRadius\r\n * @param {number} polarDegreeAngle\r\n * @returns {string}\r\n */\r\nconst texFromPolarVector = (polarRadius, polarDegreeAngle) => `${polarRadius.toFixed(2)} ∠ ${polarDegreeAngle.toFixed(2)}°`;\r\n/**\r\n * Given a html dom node, have the mathjax window object process it. This will transform its inner HTML with the tex string to render\r\n *\r\n * http://docs.mathjax.org/en/latest/web/typeset.html\r\n * @date 2021-06-13\r\n * @param {HTMLElement} node: html dom node to re-render\r\n * @returns {void}\r\n */\r\nconst forceMathjaxRender = (node) => { var _a; return (_a = window.MathJax) === null || _a === void 0 ? void 0 : _a.typeset(node ? [node] : undefined); };\r\n/**\r\n * Usage for mathjax typeset functions\r\n * ```\r\n *  window.MathJax.typesetClear()\r\n *  node.innerHTML = '$$\\\\frac{a}{1-a^3}$$';\r\n *  window.MathJax.typeset()\r\n * ```\r\n *\r\n * Do not give any argument to the typeset functions to re-render the whole page\r\n */\r\n/**\r\n * Given a node, remove its previous content (rendered by pathjax previously), replace it with a new tex string.\r\n * Then notify mathjax, to forget that it processed this node before. This will allow re-rendering when `MathJax.typeset` is called\r\n *\r\n * http://docs.mathjax.org/en/latest/web/typeset.html\r\n * @date 2021-06-13\r\n * @param {any} node:HTMLElement\r\n * @param {any} innerHtml:string\r\n * @returns {any}\r\n */\r\nconst resetMathjaxNode = (node, innerHtmlWithTexString) => {\r\n    var _a;\r\n    if (!node || !innerHtmlWithTexString)\r\n        return;\r\n    // New math expression\r\n    node.innerHTML = innerHtmlWithTexString;\r\n    // Tell mathjax to forget that it processed this node before\r\n    (_a = window.MathJax) === null || _a === void 0 ? void 0 : _a.typesetClear([node]);\r\n};\r\nexport { texFromCartesianVector, texFromPolarVector, forceMathjaxRender, resetMathjaxNode };\r\n","const degreesToRadians = Math.PI / 180;\r\n/**\r\n * Convert from degrees to radians\r\n * @date 2021-06-13\r\n * @param {number} radians:number\r\n * @returns {number} degrees\r\n */\r\nconst degreesFromRadians = (radians) => (radians / degreesToRadians);\r\n/**\r\n * Convert from radians to degrees\r\n * @date 2021-06-13\r\n * @param {number} degrees:number\r\n * @returns {number} radians\r\n */\r\nconst radiansFromDegrees = (degrees) => (degrees * degreesToRadians);\r\n/**\r\n * Computes modulus of 2D vector\r\n * @date 2021-06-13\r\n * @param {TCartesianVector|TPolarVector} v\r\n * @param {boolean} isInPolarForm:boolean\r\n * @returns {number}\r\n */\r\nconst getModulus = (v, isInPolarForm) => isInPolarForm ? v.radius : Math.sqrt(Math.pow(v.x, 2) + Math.pow(v.y, 2));\r\n/**\r\n * Divides a vector by its modulus to get a new unit vector parallel to the original one\r\n * @date 2021-06-13\r\n * @param {TCartesianVector|TPolarVector} v:\r\n * @param {boolean} isInPolarForm:boolean\r\n * @returns {TCartesianVector|TPolarVectorny}\r\n */\r\nconst toUnitVector = (v, isInPolarForm) => (isInPolarForm ? { radius: 1, degreeAngle: v.degreeAngle } : { x: v.x / getModulus(v, isInPolarForm), y: v.y / getModulus(v, isInPolarForm) });\r\n/**\r\n * Convert between polar and cartesian representations of a vector\r\n * @date 2021-06-13\r\n * @param {TPolarVector} polar:\r\n * @returns {TCartesianVector}\r\n */\r\nconst toCartesian = (polar) => ({ x: polar.radius * Math.cos(radiansFromDegrees(polar.degreeAngle)), y: polar.radius * Math.sin(radiansFromDegrees(polar.degreeAngle)) });\r\n/**\r\n * Convert between polar and cartesian representations of a vector\r\n * @date 2021-06-13\r\n * @param {TCartesianVector} v:\r\n * @returns {TPolarVector}\r\n */\r\nconst toPolar = (v) => ({ radius: getModulus(v, false), degreeAngle: degreesFromRadians(Math.atan2(v.y, v.x)) });\r\n/**\r\n * Adds 2 vectors in cartesian representation\r\n * @date 2021-06-13\r\n * @param {TCartesianVector} v1\r\n * @param {TCartesianVector} v2\r\n * @returns {TCartesianVector}\r\n */\r\nconst addCartesianVectors = (v1, v2) => ({ x: v1.x + v2.x, y: v1.y + v2.y });\r\n/**\r\n * Multiplies a cartesian vector with a scalar\r\n * @date 2021-06-13\r\n * @param {number} scalar\r\n * @param {TCartesianVector} v\r\n * @returns {TCartesianVector}\r\n */\r\nconst scalarCartesianProduct = (scalar, v) => ({ x: scalar * v.x, y: scalar * v.y });\r\nexport { toCartesian, toPolar, addCartesianVectors, scalarCartesianProduct, degreesFromRadians, radiansFromDegrees, toUnitVector };\r\n","import { texFromCartesianVector, texFromPolarVector } from \"./utils/mathjax.utils\";\r\nimport { toPolar } from \"./utils/vector.utils\";\r\n/**\r\n * Given the state of `usePolarForm`, the function returns a tex string for either the polar or cartesian form\r\n * of `vector`\r\n * @date 2021-06-13\r\n * @param {boolean} usePolarForm: boolean\r\n * @param {TCartesianVector} vector: TCartesianVector\r\n * @returns {string}: Tex string for `vector`\r\n */\r\nconst vectorToTex = (usePolarForm, vector) => {\r\n    if (!vector)\r\n        return \"\";\r\n    // Return the tex string for the cartesian vector\r\n    if (!usePolarForm)\r\n        return texFromCartesianVector(vector.x, vector.y);\r\n    // Compute polar form, then return the tex string for the computed polar vector\r\n    const polar = toPolar(vector);\r\n    return texFromPolarVector(polar.radius, polar.degreeAngle);\r\n};\r\n/**\r\n * Bring an HTML DOM node/element in view by scrolling its parent container\r\n * @date 2021-06-13\r\n * @param {HTMLElement} node: HTMLElement\r\n * @returns {void}\r\n */\r\nconst scrollToBottom = (node) => node.scrollTo(0, node.scrollHeight);\r\nconst problematicValues = [null, undefined];\r\n/**\r\n * Utility to check whether an argument in a list of arguments contains problematic values (null, undefined)\r\n * @param {any[]} args\r\n * @returns {boolean}\r\n */\r\nconst hasProblematicValue = (...args) => args.some(arg => problematicValues.includes(arg));\r\n/**\r\n * Tests whether 2 numbers are the same by asserting whether their difference is below some threshold `epsilon`\r\n * @date 2021-06-13\r\n * @param {number} num1:number\r\n * @param {number} num2:number\r\n * @param {number} epsilon:number=Number.EPSILON\r\n * @returns {boolean}\r\n */\r\nconst areNumbersAlmostEqual = (num1, num2, epsilon = Number.EPSILON) => Math.abs((num1 || 0) - (num2 || 0)) < epsilon;\r\n/**\r\n * Tests whether 2 numeric objects are the same\r\n * @date 2021-06-13\r\n * @param {{[key:string]:number}} obj1\r\n * @param {{[key:string]:number}} obj2\r\n * @param {number} epsilon:number=Number.EPSILON\r\n * @returns {boolean}\r\n */\r\nconst areNumericObjectsEqual = (obj1, obj2, epsilon = Number.EPSILON) => Object.keys(obj1).reduce((acc, key) => acc && areNumbersAlmostEqual(obj1[key], obj2[key], epsilon), true);\r\n/**\r\n * Injects a css custom property '--vh'. The css native vh unit does not behave properly on phone with a navigation bar.<br/>\r\n *\r\n * Usage:\r\n * ```\r\n * \t    injectVHInCSS(); // Run it on load\r\n * \t    windowaddEventListener('resize', injectVHInCSS); // Run it on resize\r\n * ```\r\n * @date 2021-06-13\r\n * @returns {void}.\r\n */\r\nconst injectVHInCSS = () => {\r\n    // First we get the viewport height and we multiple it by 1% to get a value for a vh unit\r\n    let vh = window.innerHeight * 0.01;\r\n    // Then we set the value in the --vh custom property to the root of the document\r\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n};\r\nexport { areNumbersAlmostEqual, areNumericObjectsEqual, vectorToTex, scrollToBottom, hasProblematicValue, injectVHInCSS };\r\n","\n\n<script lang=\"ts\">\n\n    import { injectVHInCSS } from '../App.utils';\n\tinjectVHInCSS(); // Run it on load\n\twindow.addEventListener('resize', injectVHInCSS); // Run it on resize\n\n\n    /** Logic to bring the modal on*/\n\timport { createEventDispatcher } from 'svelte';\n\tconst dispatch = createEventDispatcher();\n\tconst showInfoModal = () => dispatch('showInfo');\n\n</script>\n\n\n\n<!-- Import libraries for the Application -->\n<svelte:head>\n\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" integrity=\"sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w==\" crossorigin=\"anonymous\" referrer-policy=\"no-referrer\" />\n\t<script src=\"https://polyfill.io/v3/polyfill.min.js?features=es6\"></script>\n\t<script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>\n</svelte:head>\n\n\n\n<h1> \n\t<span class=\"title\">\n\t\t<a href=\"/\" class=\"icon\"><i class=\"fas fa-subscript\"></i></a> \n\t\t<span>Add Vectors</span>\n\t</span>\n\t<button class=\"btn-info\" on:click={showInfoModal}><i class=\"fas fa-info\" aria-hidden=\"true\"></i></button>\n</h1>\n\n\n<style>\n\nh1{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    line-height: 1;\n    font-size: 1.5rem;\n}\n.title{\n    display: inline-flex;\n    align-items: baseline;\n}\n.icon{\n    width: 2.2rem;\n    height: 2.2rem;\n    /* background: #eee; */\n    background-color: var(--color-secondary-dark);\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n    font-size: 1.5rem;\n    padding-left: 0.2rem;\n    margin-right: 1rem;\n    color: #333;\n    color: var(--color-secondary-light);\n}\n.icon:hover{\n    text-decoration: none; \n    background-color: rgba(0,0,0,0.1);\n}\n.btn-info{\n    font-size: .8rem;\n    height: 30px;\n    width: 30px;\n    border: none;\n    background: rgba(0,0,0,.1);\n    color: #999;\n    color: var(--color-secondary);\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n@media screen and (min-width: 640px) {\n\t.btn-info{\n\t\tdisplay: none;\n\t}\n}\n</style>","\n<script lang=\"ts\">\nexport let checked = false;\nexport let extraClasses = \"\";\n</script>\n\n\n<!-- https://hackernoon.com/hacking-custom-checkboxes-and-radios-5d48230440d -->\n<label for=\"vector-representation\" class={`check-custom-container ${extraClasses}`}>\n\t<!-- Input element for the checkbox -->\n\t<input type=\"checkbox\" class=\"check-custom toggle-switch\" id=\"vector-representation\" bind:checked={checked}>\n\t\n\t<!-- Customization element for the checkbox -->\n\t<span class=\"check-toggle\"></span>\n\n\t<!-- Slot to support custom/optional text for the checked/unchecked state -->\n\t<slot></slot>\n</label>\n\n\n\n\n<style>\n.check-custom-container{\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n}\n/* Styles for hiding the native checkbox */\ninput[type='checkbox'].check-custom {\n    position: absolute;\n    left: -10000px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n}\n\n/* Styles for the basic appearance of the toggle switch */\ninput[type='checkbox'].check-custom.toggle-switch ~ .check-toggle {\n    width: 1.5rem;\n    height: 1rem;\n    position: relative;\n    display: inline-block;\n    vertical-align: middle;\n    cursor: pointer;\n}\n\n/* Common styles for the ::before and ::after pseudo-elements of the toggle switch */\ninput[type='checkbox'].check-custom.toggle-switch ~ .check-toggle::before,\ninput[type='checkbox'].check-custom.toggle-switch ~ .check-toggle::after {\n    content: '';\n    top: 0;\n    left: 0;\n    position: absolute;\n}\n\n/* Styles for the ::before pseudo-element (the outer frame) of the toggle switch */\ninput[type='checkbox'].check-custom.toggle-switch ~ .check-toggle::before {\n    width: 100%;\n    height: 100%;\n    border-radius: 0.5rem;\n    background: #dbdbdb;\n}\n\n/* Styles for the ::after pseudo-element (the inner slider) of the toggle switch */\ninput[type='checkbox'].check-custom.toggle-switch ~ .check-toggle::after {\n    width: 0.75rem;\n    height: 0.75rem;\n    margin: 0.125rem;\n    border-radius: 50%;\n    background: #ffffff;\n    transition: all .3s;\n}\n\n/* Styles for the ::before pseudo-element of the toggle switch in hover state */\ninput[type='checkbox'].check-custom.toggle-switch:hover ~ .check-toggle::before {\n    background: #c4c4c4;\n}\n\n/* Styles for the ::before pseudo-element of the toggle switch in focus state */\ninput[type='checkbox'].check-custom.toggle-switch:focus ~ .check-toggle::before {\n    box-shadow: 0 0 0 2px rgba(23, 133, 255, 0.5);\n}\n\n/* Styles for the ::before pseudo-element of the toggle switch in both focus and checked or enabled state */\ninput[type='checkbox'].check-custom.toggle-switch:focus:checked ~ .check-toggle::before {\n    box-shadow: 0 0 0 2px rgba(97, 191, 158, 0.5);\n}\n\n/* Styles for the ::before pseudo-element of the toggle switch in checked or enabled state */\ninput[type='checkbox'].check-custom.toggle-switch:checked ~ .check-toggle::before {\n    background: #61bf9e;\n}\n\n/* Styles for the ::after pseudo-element of the toggle switch in checked or enabled state */\ninput[type='checkbox'].check-custom.toggle-switch:checked ~ .check-toggle::after {\n    /*   left: auto; */\n    /*   right: 0; */\n    left: 7px;\n}\n</style>","\n<script lang=\"ts\">\nimport CheckBox from \"./CheckBoxToggleSwitch.svelte\";\nexport let usePolarForm = false;\n\nimport { createEventDispatcher } from 'svelte';\nconst dispatch = createEventDispatcher();\nconst onSelection = (action: string) => dispatch(\"selection\", action);\nconst onNewSession = ()=>onSelection(\"new-session\");\nconst onNewOperand = ()=>onSelection(\"new-operand\");\nconst onReset = ()=>onSelection(\"reset\");\n\n</script>\n\n<div class=\"menu-items-container__inner\">\n\n\n\t<CheckBox bind:checked={usePolarForm} extraClasses={\"inline-block menu-item\"}>\n\t\t<span class=\"cartesian\">{`(\\\\(x, y\\\\))`}</span>\n\t\t<span class=\"polar\">{`(\\\\(\\\\rho, \\\\alpha °\\\\))`}</span>\n\t</CheckBox>\n\n\n\t<ul class=\"reset flex\">\n\t\t<li><button class=\"menu-item\" on:click={onNewSession}><i class=\"fas fa-recycle\" aria-hidden=\"true\"></i><span>Reuse</span></button></li>\n\t\t<li><button class=\"menu-item\" on:click={onReset}><i class=\"far fa-trash-alt\" aria-hidden=\"true\"></i><span>Reset</span></button></li>\n\t\t<li><button class=\"menu-item\" on:click={onNewOperand}><i class=\"fas fa-plus\" aria-hidden=\"true\"></i><span>New</span> </button></li>\n\t</ul>\n</div>\n\n\n<style>\n.menu-items-container__inner{\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tbackground: #f5f5f5;\n\tbackground: var(--color-secondary-dark);\n\tcolor: var(--color-primary-light);\n\toverflow-y: hidden;\n}\n.menu-item{\n\tbackground: none;\n\tborder: none;\n\theight: 50px;\n\tpadding: .5rem;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n}\n.menu-item:focus{\n\tborder-top: 2px solid #aaa;\n\tborder-top: 4px solid var(--color-secondary);\n}\n.menu-item:hover,\n.menu-item:active {\n  background-color: #ddd;\n  background-color: rgba(0,0,0,0.2);\n}\nbutton.menu-item{\n\tfont-size: 1.2rem;\n\twidth: 50px;\n\tcolor: var(--color-primary-light);\n}\nbutton.menu-item span{\n\tdisplay: none;\n}\n.menu-item span{\n\tmargin-left: .5rem;\n}\n\n\n\n\n\n@media screen and (min-width: 640px) {\n\t:global(label.menu-item){\n\t\tpadding: .5rem 1rem;\n\t}\n}\n@media screen and (min-width: 900px) {\n\tbutton.menu-item{\n\t\twidth: auto;\n\t}\n\tbutton.menu-item span{\n\t\tdisplay: inline-block;\n\t\tmargin-left: .5rem;\n\t}\n}\n@media screen and (min-width: 1024px) {\n\tbutton.menu-item{\n\t\tpadding-left: 1rem;\n\t\tpadding-right: 1rem;\n\t}\n}\n:global(label.menu-item){\n\tpadding: 0 1rem;\n\ttransform: scale(1.2, 1.2);\n}\n:global(#vector-representation ~ .cartesian),\n:global(#vector-representation ~ .polar){margin-left: .5rem;}\n:global(#vector-representation ~ .cartesian){display: inline-block;}\n:global(#vector-representation ~ .polar){display: none;}\n:global(#vector-representation:checked ~ .cartesian){display: none;}\n:global(#vector-representation:checked ~ .polar){display: inline-block;}\n</style>","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","\r\n<script lang=\"ts\">\r\n\r\n\r\nexport let extraClasses = '';\r\n\r\n\r\n/** Logic to get a unique ID for each mathjax node*/\r\nimport { writable } from 'svelte/store';\r\nconst nodeId = writable(-1);\r\nconst getId = () => { \r\n    nodeId.update(v => v + 1); \r\n    return $nodeId;\r\n}\r\nconst id = `${new Date().getTime()}-${getId()}`;\r\n\r\n\r\n\r\n\r\n/** Logic to re-render mathjax nodes*/\r\nimport { afterUpdate, beforeUpdate, onMount, tick } from 'svelte';\r\nimport { forceMathjaxRender, resetMathjaxNode } from '../utils/mathjax.utils';\r\nexport let mathjaxExpression = '';\r\n\r\nlet mathjaxDOMNode: HTMLElement = null;\r\n\r\nonMount(() => {\r\n    resetMathjaxNode(mathjaxDOMNode, mathjaxExpression);\r\n    tick().then(()=>forceMathjaxRender(mathjaxDOMNode));\r\n});\r\nbeforeUpdate(() => resetMathjaxNode(mathjaxDOMNode, mathjaxExpression));\r\n// afterUpdate(() => forceMathjaxRender(mathjaxDOMNode));\r\nafterUpdate(() => forceMathjaxRender());\r\n\r\n</script>\r\n\r\n\r\n<span id={id} bind:this={mathjaxDOMNode} class={extraClasses}></span>\r\n\r\n","\n<script lang=\"ts\">\nexport let checked = false;\nexport let extraClasses = \"\";\n\nexport let id = 0;\nconst actualId = `${new Date().getTime()}-${id}`;\n\n\nimport { createEventDispatcher } from 'svelte';\nconst dispatch = createEventDispatcher();\nconst onChangeHandler = (checked: boolean) => dispatch(\"change\", checked);\n</script>\n\n\n<!-- https://hackernoon.com/hacking-custom-checkboxes-and-radios-5d48230440d -->\n<label for={`checkbox-${actualId}`} class={`check-custom-container ${checked ? 'check-custom-container--true' : ''} ${extraClasses}`}>\n\t<!-- Input element for the checkbox -->\n\t<!-- Add a `toggle-switch` class to the input element -->\n\t<input type=\"checkbox\" class=\"check-custom\" id={`checkbox-${actualId}`} bind:checked={checked} on:input={ev => onChangeHandler(ev.currentTarget.checked)}>\n\n\t<!-- Slots to support custom/optional text for the checked/unchecked state -->\n\t<span class=\"true-details\">\n        <slot name=\"trueIcon\">T</slot>\n        {#if $$slots.trueText}    \n            <slot name=\"trueText\">True</slot>\n        {/if}\n    </span>\n\t<span class=\"false-details\">\n        <slot name=\"falseIcon\">F</slot>\n        {#if $$slots.falseText}    \n            <slot name=\"falseText\">False</slot>\n        {/if}\n    </span>\n\n\n</label>\n\n\n\n\n<style>\n.check-custom-container{\n    display: inline-grid;\n    grid-template: 1fr / 1fr;\n    width: max-content;\n    cursor: pointer;\n    padding: 2px;\n    --true-font-color: #38856a;\n    --true-focus-color: #61bf9e80;\n    --true-border-color: #61bf9e;\n    --false-font-color: #555;\n    --false-focus-color: #1785ff80;\n    --false-border-color: #eee;   \n}\n/* Styles for hiding the native checkbox */\ninput[type='checkbox'].check-custom {\n    position: absolute;\n    left: -10000px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n}\n\n.true-details,\n.false-details{\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n    border: 1px solid #eee;\n    color: #555;\n    border-color: var(--false-border-color);\n    color: var(--false-font-color);\n    min-width: 2rem;\n    min-height: 2rem;\n}\n\n.true-details{\n    border-color: #61bf9e;\n    color: #38856a;\n    border-color: var(--true-border-color);\n    color: var(--true-font-color);\n}\n\n\n\n\n\ninput[type=\"checkbox\"].check-custom:focus ~ .false-details{ box-shadow: 0 0 0 2px #1785ff80; }\ninput[type=\"checkbox\"].check-custom:focus ~ .true-details{ box-shadow: 0 0 0 2px #61bf9e80; }\ninput[type=\"checkbox\"].check-custom:focus ~ .false-details{ box-shadow: 0 0 0 2px var(--false-focus-color); }\ninput[type=\"checkbox\"].check-custom:focus ~ .true-details{ box-shadow: 0 0 0 2px var(--true-focus-color); }\n\n\ninput[type=\"checkbox\"].check-custom ~ .false-details{ display: inline-flex; }\ninput[type=\"checkbox\"].check-custom ~ .true-details{ display: none; }\ninput[type=\"checkbox\"].check-custom:checked ~ .false-details{ display: none; }\ninput[type=\"checkbox\"].check-custom:checked ~ .true-details{ display: inline-flex; }\n</style>","\r\n<script lang=\"ts\">\r\nexport let id = \"\";\r\nconst actualId = `${new Date().getTime()}-${id}`;\r\n\r\nexport let label = \"My Input\";\r\nexport let placeholder = \"My Input\";\r\nexport let value = 0;\r\n\r\nimport { createEventDispatcher } from 'svelte';\r\nconst dispatch = createEventDispatcher();\r\nconst onInput = (ev)=>dispatch(\"input\", ev);\r\n\r\n\r\n\r\n</script>\r\n\r\n<div class=\"input-group\">      \r\n    <input type=\"number\" bind:value={value} required id={actualId} {placeholder} on:input={onInput}>\r\n    <span class=\"highlight\"></span>\r\n    <label for={actualId}>{label}</label>\r\n</div>\r\n\r\n\r\n\r\n<style>\r\n.input-group{\r\n  width: 100%;\r\n  margin-bottom: 1.5rem;\r\n  /* margin-bottom: 1.2rem; */\r\n  position: relative;\r\n  /* border-bottom: 1px solid red; */\r\n}\r\ninput \t\t\t\t{\r\n  /* font-size:18px; */\r\n  padding: 0 .5rem .1rem .3rem;\r\n  display: block;\r\n  width: 100%;\r\n  border: none;\r\n  font-size: 1rem;\r\n  background: rgba(0,0,0,0.04);\r\n  line-height: 1.5;\r\n  min-height: 36px;\r\n  /* border-bottom: 1px solid #757575; */\r\n}\r\ninput:focus \t\t{ outline:none; }\r\n\r\ninput:focus::-webkit-input-placeholder {/* Chrome/Opera/Safari/Edge */ font-style: italic; }\r\ninput:focus::-ms-input-placeholder { /* Microsoft Edge */ font-style: italic; }\r\ninput:focus:-ms-input-placeholder {/* IE 10+ */ font-style: italic; }\r\ninput:focus::-moz-placeholder {/* Firefox 19+ */ font-style: italic; }\r\ninput:focus:-moz-placeholder {/* Firefox 18- */ font-style: italic; }\r\ninput:focus::placeholder { font-style: italic; }\r\n\r\nlabel{\r\n  position: absolute;\r\n  font-size: .7rem;\r\n  bottom: -1rem;\r\n  padding-left: .3rem;\r\n  font-style: italic;\r\n  width: 100%;\r\n}\r\nlabel::before,\r\nlabel::after{\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  content: \"\";\r\n  height: 1px;\r\n  background-color: #bbb;\r\n  background-color: var(--color-secondary-dark);\r\n  display: block;\r\n  position: absolute;\r\n  transition:0.2s ease all; \r\n  -moz-transition:0.2s ease all; \r\n  -webkit-transition:0.2s ease all;\r\n}\r\nlabel::after\t{\r\n  transform: scaleX(0);\r\n  background-color: #777;\r\n  background-color: var(--color-secondary);\r\n}\r\n/* active state */\r\n/* input:focus ~ label, input:valid ~ label \t\t{ */\r\ninput:focus ~ label{\r\n  font-weight: bold;\r\n}\r\ninput:focus ~ label::after, input:valid ~ label::after \t\t{\r\n  transform: scaleX(1);\r\n}\r\n\r\n/* HIGHLIGHTER ================================== */\r\n.highlight {\r\n  position:absolute;\r\n  height:80%; \r\n  width:50%; \r\n  bottom:.3rem; \r\n  left:.3rem;\r\n  pointer-events:none;\r\n  opacity:0.5;\r\n}\r\n\r\n/* active state */\r\ninput:focus ~ .highlight {\r\n  -webkit-animation:inputHighlighter 0.3s ease;\r\n  -moz-animation:inputHighlighter 0.3s ease;\r\n  animation:inputHighlighter 0.3s ease;\r\n}\r\n\r\n/* ANIMATIONS ================ */\r\n@-webkit-keyframes inputHighlighter {\r\n\tfrom { background: var(--color-accent-dark);  }\r\n  to \t{ width:0; background:transparent; }\r\n}\r\n@-moz-keyframes inputHighlighter {\r\n\tfrom { background: var(--color-accent-dark);; }\r\n  to \t{ width:0; background:transparent; }\r\n}\r\n@keyframes inputHighlighter {\r\n\tfrom { background: var(--color-accent-dark);; }\r\n  to \t{ width:0; background:transparent; }\r\n}\r\n</style>","\r\n<script lang=\"ts\">\r\nimport Input from \"./Input.svelte\";\r\n\r\n\r\nexport let id = 0;\r\nconst actualId = `${new Date().getTime()}-${id}`;\r\n\r\n\r\nimport type { TRepresentationLabels, TRepresentationValues } from \"./Operands.types\";\r\nexport let vector: TRepresentationValues;\r\nexport let labels: TRepresentationLabels;\r\n\r\n\r\n\r\n\r\nimport { createEventDispatcher } from 'svelte';\r\nconst dispatch = createEventDispatcher();\r\n\r\n/**\r\n * Merges `vector` to the `keyValue` object. Every key from vector that is present in the new object 'keyValue' is updated to the value from this new object\r\n * @date 2021-06-13\r\n * @param {any} vector:TRepresentationValues\r\n * @param {any} keyValue:any\r\n * @returns {void}\r\n */\r\nconst onChangeHandler = (vector: TRepresentationValues, keyValue: any) => {\r\n\r\n  // Find common keys between \"vector\" and \"keyValue\", overwrite the values in \"vector\" for those keys\r\n  const updatedVector: TRepresentationValues = Object.keys(vector).reduce(\r\n    (acc, key) => keyValue[key] ? {...acc, ...{[key]: keyValue[key]}} : acc, \r\n    vector\r\n  );\r\n\r\n  // Notifiy parent components of the change\r\n  dispatch(\"change\", updatedVector);\r\n}\r\n\r\n</script>\r\n\r\n\r\n\r\n\r\n<div class=\"vector-editor\">\r\n  <Input label={labels.multiplier} placeholder={labels.multiplier} bind:value={vector.multiplier} id={`${actualId}-${labels.multiplier}`} on:input={ev => onChangeHandler(vector, {multiplier: parseFloat(ev.detail.target.value)})}/>\r\n  <Input label={labels.component1} placeholder={labels.component1} bind:value={vector.component1} id={`${actualId}-${labels.component1}`} on:input={ev => onChangeHandler(vector, {component1: parseFloat(ev.detail.target.value)})}/>\r\n  <div></div>\r\n  <Input label={labels.component2} placeholder={labels.component2} bind:value={vector.component2} id={`${actualId}-${labels.component2}`} on:input={ev => onChangeHandler(vector, {component2: parseFloat(ev.detail.target.value)})}/>\r\n</div>\r\n\r\n\r\n\r\n","import { __rest } from \"tslib\";\r\nimport { addCartesianVectors, scalarCartesianProduct, toCartesian, toPolar, toUnitVector } from \"../utils/vector.utils\";\r\nimport { areNumericObjectsEqual, hasProblematicValue } from \"../App.utils\";\r\n/**\r\n * Given a vector's cartesian components, a scalar multiplier for the vector, and a sign\r\n * (indicating whether the operand is added to the previous operand), the function will\r\n * buikld an object to type `TOperand`\r\n * @date 2021-06-13\r\n * @param {number} x: cartesian x-component\r\n * @param {number} y: cartesian y-component\r\n * @param {number} multiplier: scalar multiplier for the operand\r\n * @param {boolean} isAddedToPrevious: Is operand added to the previous operand in the sum towards the resultant vector?\r\n * @returns {TOperand} \"TOperand\" object\r\n */\r\nconst operandFromVector = (x, y, multiplier = 1, isAddedToPrevious = true) => ({\r\n    isAddedToPrevious,\r\n    scalarMultiplier: multiplier,\r\n    xComponent: x ? x : 0,\r\n    yComponent: y ? y : 0\r\n});\r\n/**\r\n * Given an operand (x, y, scalar) object, compute the cartesian vector associated -> k * {x,y}\r\n * @date 2021-06-13\r\n * @param {TOperand} op: The operand to change to vector\r\n * @returns {TCartesianVector}: The resulting cartesian vector\r\n */\r\nconst operandToVector = (op) => {\r\n    if (hasProblematicValue(op))\r\n        return;\r\n    return scalarCartesianProduct(op.scalarMultiplier, { x: op.xComponent, y: op.yComponent });\r\n};\r\n/**\r\n * Return the sum (as a cartesian vector) of a cartesian vector \"acc\" and the operand object \"op\"\r\n * The function is designed to be used with ``arr.reduce``, to sum an array of ``TOperand`` objects\r\n * @date 2021-06-13\r\n * @param {TCartesianVector} acc\r\n * @param {TOperand} op\r\n * @returns {TCartesianVector} acc + op\r\n */\r\nconst sumOperands = (acc, op) => addCartesianVectors(acc, scalarCartesianProduct((op.isAddedToPrevious ? 1 : -1), operandToVector(op)));\r\n/**\r\n * Centralizes the code for operands CRUD operations given the current vector ***representation*** setting at the app level.\r\n * Higher order function that will return the functions needed by the vector editor to update, retrieve and delete operands.\r\n * @date 2021-06-13\r\n * @param {boolean} usePolarForm: App level setting for vector representation (polar vs cartesian)\r\n * @param {Function} getOperand: Function with a closure on the current operands object in the app, get operand at `index`\r\n * @param {Function} setOperand: Function with a closure on the current operands object in the app, replace operand at `index`\r\n * @param {Function} deleteOperand: Function with a closure on the current operands object in the app, remove operand at `index`\r\n * @returns {TComponentRepresentationHandlers}: Handle for the vector editor functionality\r\n */\r\nconst operandEditorProxyHOF = (usePolarForm, getOperand, setOperand, deleteOperand) => {\r\n    // The vector editor does not know the current representation (polar or cartesian). It gets its input labels from here\r\n    const cartesianLabels = { multiplier: \"multiplier\", component1: \"x-component\", component2: \"y-component\" };\r\n    const polarLabels = { multiplier: \"multiplier\", component1: \"polar-length\", component2: \"polar-angle (degrees)\" };\r\n    /**\r\n     * Get's the operand at index and transforms it to the current representation (polar or cartesian)\r\n     * @date 2021-06-13\r\n     * @param {number} index:number\r\n     * @returns {TRepresentationValues} The vector corresponding to the operand at `index` representing according to `usePolarForm`\r\n     */\r\n    const getComponent = (index) => {\r\n        if (hasProblematicValue(index))\r\n            return;\r\n        // Obtain the vector associated to the operand at `index` using both representations (cartesian, polar)\r\n        const op = getOperand(index);\r\n        const { x, y } = { x: op.xComponent, y: op.yComponent };\r\n        const { radius, degreeAngle } = usePolarForm ? toPolar({ x, y }) : { radius: null, degreeAngle: null };\r\n        // Return the correct repreentation depending on the value of `usePolarForm`\r\n        return { multiplier: op.scalarMultiplier, component1: usePolarForm ? radius : x, component2: usePolarForm ? degreeAngle : y };\r\n    };\r\n    return {\r\n        getLabels: () => usePolarForm ? polarLabels : cartesianLabels,\r\n        getComponent: getComponent,\r\n        setComponent: (newValues, isAddedToPrevious, index) => {\r\n            if (hasProblematicValue(newValues, isAddedToPrevious, index))\r\n                return;\r\n            const { x, y } = !usePolarForm ? { x: newValues.component1, y: newValues.component2 } : toCartesian({ radius: newValues.component1, degreeAngle: newValues.component2 });\r\n            const _a = getOperand(index), { isAddedToPrevious: sign } = _a, rest = __rest(_a, [\"isAddedToPrevious\"]);\r\n            if (areNumericObjectsEqual({ xComponent: x, yComponent: y, scalarMultiplier: newValues.multiplier }, rest, 0.001) && sign === isAddedToPrevious)\r\n                return;\r\n            setOperand(operandFromVector(x, y, newValues.multiplier, isAddedToPrevious), index);\r\n        },\r\n        deleteComponent: (index) => hasProblematicValue(index) || deleteOperand(index),\r\n        toUnitVector: (index) => {\r\n            if (hasProblematicValue(index))\r\n                return;\r\n            const op = getOperand(index);\r\n            const { x, y } = toUnitVector({ x: op.xComponent, y: op.yComponent }, false);\r\n            setOperand(operandFromVector(x, y, op.scalarMultiplier, op.isAddedToPrevious), index);\r\n        }\r\n    };\r\n};\r\nexport { operandFromVector, sumOperands, operandToVector, operandEditorProxyHOF };\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","\n\n\n\n<script lang=\"ts\">\nimport MathJaxNode from \"./MathJaxNode.svelte\";\nimport CheckBoxWithIcons from \"./CheckBoxWithIcons.svelte\";\nimport VectorEditor from \"./VectorEditor.svelte\";\nimport { operandToVector } from \"./Operands.utils\";\nimport type { TComponentRepresentationHandlers, TOperand, TRepresentationLabels, TRepresentationValues } from \"./Operands.types\";\nimport { afterUpdate } from \"svelte\";\n\n\n\nexport let id = 0;\nconst actualId = `${new Date().getTime()}-${id}`;\n\n\nexport let operand: TOperand = null;\nlet isAdded: boolean;\n$: isAdded = operand.isAddedToPrevious;\n\nexport let vectorToTex: Function = null;\n$: texVector = vectorToTex(operandToVector(operand));\n\n\n\n\n\n\nexport let editorProxy: TComponentRepresentationHandlers = null;\nexport let index = 0;\n\n/** Get labels for the editing window */\nlet labels: TRepresentationLabels\n$: labels = editorProxy.getLabels();\n/** Get current representation (polar or cartesian) for the operand at index */\nlet vector: TRepresentationValues \n$: vector = editorProxy.getComponent(index);;\n\n/** Logic to allow notification of local changes to vector to the remote source object (in an ancestor) in batch */\nlet timerHandler;\n$: {\n\tclearTimeout(timerHandler);\n\ttimerHandler = setTimeout(()=>editorProxy.setComponent(vector, isAdded, index), 200);\n}\n\nconst handleDelete = ()=>editorProxy.deleteComponent(index);\nconst handleToUnitVector = ()=>editorProxy.toUnitVector(index);\n\n\n\nlet isEditing = false;\nlet containerNode: HTMLElement;\n/** When opening editor mode, make sure the editing window is entirely visible by scrolling it into view */\nafterUpdate(()=>isEditing && containerNode && containerNode.scrollIntoView({behavior: \"smooth\", block: \"nearest\", inline: \"nearest\"}));\n\n\n</script>\n\n\n\n\n\n<li class={`operand-container ${isEditing ? 'operand-container--opened' : ''}`} bind:this={containerNode}>\n\t\n\t<div class=\"math-sign\">\n\t\t<CheckBoxWithIcons extraClasses={'sign-checkbox'} checked={!isAdded} on:change={ev => isAdded = !(ev.detail)}>\n\t\t\t<i slot=\"falseIcon\" class=\"fas fa-plus\" aria-hidden=\"true\"></i>\n\t\t\t<i slot=\"trueIcon\" class=\"fas fa-minus\" aria-hidden=\"true\"></i>\n\t\t</CheckBoxWithIcons>\n\t</div>\n\t<div class=\"math-expression\">\n\t\t<MathJaxNode mathjaxExpression={`<span class=\"vector-name ${isEditing? '' : 'muted-text'}\">\\\\(\\\\overrightarrow{V_{${id}}}\\\\) = </span>` + texVector}/>\n\t</div>\n\n\t<input type=\"checkbox\" class=\"edit-mode\" id={`edit-mode-${actualId}`} bind:checked={isEditing}>\n\t<label for={`edit-mode-${actualId}`} class=\"edit-controls\">\n\t\t<span class=\"edit\"><i class=\"fas fa-pen\" aria-hidden=\"true\"></i></span>\n\t\t<span class=\"done\"><i class=\"fas fa-check\" aria-hidden=\"true\"></i></span>\n\t</label>\n\n\n\t<div class=\"collapsable\">\n\t</div>\n\t<div class=\"math-components collapsable\">\n\t\t<VectorEditor {labels} {vector} on:change={ev => vector = ev.detail}/>\n\t</div>\n\t<div class=\"other-controls collapsable\">\n\t\t<span class=\"edit\" on:click={handleDelete}><i class=\"fas fa-trash\" aria-hidden=\"true\"></i></span>\n\t\t<span class=\"edit\" on:click={handleToUnitVector}><i class=\"fas fa-pen\" aria-hidden=\"true\"></i></span>\n\t</div>\n\n\n\t\n\n\n</li>\n\n\n<style>\n.operand-container{\n\tdisplay: grid;\n\tgrid-template: 2rem auto / 2rem 1fr 2rem;\n\tgrid-template: auto auto / 2rem 1fr 2rem;\n\toverflow-y: hidden;\n\tgrid-gap: 0 .5rem;\n\tmargin-bottom: 1rem;\n}\n:global(.sign-checkbox){\n\ttransform: scale(.8);\n    --true-font-color: #cf5050 !important;\n    --true-focus-color: #ebc2c280 !important;\n    --true-border-color: #ffdada !important;\n    --false-border-color: rgba(0,0,0,0.1) !important;\n}\n\n.math-sign,\n.edit-controls,\n.other-controls{\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: baseline;\n}\n.math-expression{\n\tpadding-left: .5rem;\n\tdisplay: flex;\n\talign-items: end;\n}\n.edit-controls span,\n.other-controls span{\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 2rem;\n\theight: 2rem;\n\tborder-radius: 50%;\n\tcolor: #ddd;\n\tcolor: var(--color-accent);\n\tcursor: pointer;\n\t/* background-color: #eee; */\n}\n.edit-controls span:hover,\n.other-controls span:hover{\n\tbackground: rgba(0,0,0,.05);\n}\n.edit-controls span:focus,\n.other-controls span:focus{\n\tbackground: rgba(0,0,0,.1);\n}\n.edit-controls span:active,\n.other-controls span:active{\n\tbackground: var(--color-accent);\n\tcolor: var(--color-primary-light);\n}\n.math-components{\n\tpadding: 1rem .5rem;\n\tpadding-left: 2.5rem;\n}\n.other-controls{\n\tpadding: 1rem 0;\n\tflex-direction: column;\n\tjustify-content: flex-start;\n}\n.other-controls span{\n\tborder: 1px solid rgba(0,0,0,0.1);\n\tmargin-bottom: .5rem;\n}\n\n\n\ninput[type=\"checkbox\"].edit-mode{\n\tposition: absolute;\n\tleft: -10000px;\n\ttop: 0;\n\toverflow: hidden;\n\twidth: 1px;\n\theight: 1px;\n}\ninput[type=\"checkbox\"].edit-mode ~ label .edit{ display: inline-flex; }\ninput[type=\"checkbox\"].edit-mode ~ label .done{ display: none; }\ninput[type=\"checkbox\"].edit-mode:checked ~ label .edit{ display: none; }\ninput[type=\"checkbox\"].edit-mode:checked ~ label .done{ display: inline-flex; background: var(--color-accent-lighter); }\n\n\n\n.collapsable{ transition: all .2s;  }\ninput[type=\"checkbox\"].edit-mode:not(:checked) ~ .collapsable{ height: 0; overflow: hidden; padding-top: 0; padding-bottom: 0; } \n/* input[type=\"checkbox\"].edit-mode:checked ~ .collapsable{ height: auto; } */\n\n:global(.operand-container .muted-text){ color: var(--color-primary-light2);}\n:global(.operand-container .vector-name){ margin-right: .5rem; }\n</style>\n","\n<script lang=\"ts\">\nimport { createEventDispatcher } from \"svelte\";\n\nimport Operand from \"./Operand.svelte\";\nimport type { TComponentRepresentationHandlers, TOperands } from \"./Operands.types\";\n\nexport let data: TOperands = [];\nexport let editorProxy: TComponentRepresentationHandlers;\nexport let vectorToTex: Function;\n\n\n\nconst dispatch = createEventDispatcher();\nconst onNewOperand = ()=>dispatch(\"newOperand\");\n</script>\n\n\n{#if data.length > 0}\n    <ul class=\"operands-container reset\">\n    {#each data as item, i (i)}\n        <Operand id={i+1} index={i} {vectorToTex} bind:operand={item} bind:editorProxy={editorProxy}/>\n    {/each}\n    </ul>\n{:else}\n    <div class=\"empty-state\" on:click={onNewOperand}> \n        <span class=\"empty-message\">Oups! There doesn't seem to be anything to add yet.</span>    \n        <span class=\"empty-icon\"><i class=\"fas fa-plus\" aria-hidden=\"true\"></i></span> \n        <span class=\"empty-message\">Click here to get started!</span>    \n    </div>\n{/if}\n\n\n\n<style>\n:global(.operands-container .operand-container:first-of-type .math-sign){\n    visibility: hidden;\n}\n\n\n.empty-state{\n    border: 1px solid #61bf9e;\n    border-color: var(--color-accent);\n    padding: 1rem;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: #dffff4;\n    background: var(--color-accent-lighter3);\n    flex-direction: column;\n    color: #125d42;\n    color: var(--color-accent-dark);\n    border-radius: 8px;\n    cursor: pointer;\n}\n.empty-state:hover{\n    background: #c7fbe9;\n    background: var(--color-accent-lighter);\n}\n.empty-message{\n    display: block;\n    font-size: .8rem;\n    text-align: center;\n    max-width: 75%;\n}\n.empty-icon{\n    font-size: 2rem;\n    margin-bottom: .5rem;\n}\n</style>","\n<script lang=\"ts\">\nimport type { TCartesianVector } from '../utils/vector.types';\nimport MathJaxNode from './MathJaxNode.svelte';\n\nexport let resultant: TCartesianVector = {x: 1.25, y: 2.35};\nexport let vectorToTex: (v: TCartesianVector) => string = null;\n</script>\n\n\n<slot name=\"canvas\"></slot>\n\n<div id=\"resultant\" class=\"resultant\">\n    <MathJaxNode mathjaxExpression={`\\\\(\\\\overrightarrow{R}\\\\) = \\\\(\\\\sum_{i}\\\\vec{V_i}\\\\) = ` + vectorToTex(resultant)}/>\n</div>\n\n\n\n<style>\n\n#resultant{\n\tmargin: 0 auto;\n    text-align: center;\n    color: var(--color-secondary-dark);\n    font-weight: bold;\n}\n</style>","import { toCartesian, toPolar } from \"./vector.utils\";\r\nconst strokeNormalColor = \"#000\";\r\nconst strokeAccentColor = \"#f00\";\r\nconst DECIMAL_PLACES = 2;\r\n/**\r\n * For display purposes, limits the number of decimal places\r\n * @date 2021-06-13\r\n * @param {number} num:number\r\n * @returns {string}\r\n */\r\nconst formatNumber = (num) => num.toFixed(DECIMAL_PLACES);\r\n/**\r\n * Wrapper for clearing canvas\r\n * @date 2021-06-13\r\n * @param {TCanvasParameters} data\r\n * @returns {void}\r\n */\r\nfunction clearCanvas({ node, context }) {\r\n    if (!context || !node)\r\n        return;\r\n    _clearCanvas(context, node.width, node.height);\r\n}\r\n/**\r\n * Clears the canvas by clearing a rectangle that spreads throughout the canvas's entire size\r\n * @date 2021-06-13\r\n * @param {CanvasRenderingContext2D} context: canvas object for rendering 2D drawings\r\n * @param {number} canvasWidth:number\r\n * @param {number} canvasHeight:number\r\n * @returns {void}\r\n */\r\nfunction _clearCanvas(context, canvasWidth, canvasHeight) {\r\n    if (!context)\r\n        return;\r\n    context.clearRect(0, 0, canvasWidth, canvasHeight);\r\n}\r\n/**\r\n * Wrapper for drawing axises on the canvas object\r\n * @date 2021-06-13\r\n * @param {TCanvasParameters} data:TCanvasParameters\r\n * @returns {void}\r\n */\r\nfunction drawCanvasAxis({ node, context, xCenter, yCenter }) {\r\n    if (!node)\r\n        return;\r\n    _drawCanvasAxis(context, xCenter, yCenter, node.width, node.height);\r\n}\r\n/**\r\n * Draws x and y axises passing through center at (xCenter, yCenter), spanning entire canvas width and height\r\n * @date 2021-06-13\r\n * @param {CanvasRenderingContext2D} context:any\r\n * @param {number} xCenter:number\r\n * @param {number} yCenter:number\r\n * @param {number} canvasWidth:number\r\n * @param {number} canvasHeight:number\r\n * @returns {void}\r\n */\r\nfunction _drawCanvasAxis(context, xCenter, yCenter, canvasWidth, canvasHeight) {\r\n    if (!context || !canvasWidth || !canvasHeight)\r\n        return;\r\n    if (!xCenter)\r\n        xCenter = canvasWidth / 2;\r\n    if (!yCenter)\r\n        yCenter = canvasHeight / 2;\r\n    // Prepare drawing pen\r\n    context.lineWidth = .2;\r\n    context.setLineDash([5, 6]);\r\n    context.strokeStyle = strokeNormalColor;\r\n    // Draw horizontal line\r\n    context.beginPath();\r\n    context.moveTo(0, yCenter);\r\n    context.lineTo(canvasWidth, yCenter);\r\n    context.stroke();\r\n    // Draw vertical line\r\n    context.beginPath();\r\n    context.moveTo(xCenter, 0);\r\n    context.lineTo(xCenter, canvasHeight);\r\n    context.stroke();\r\n    // reset drawing pen\r\n    context.setLineDash([5, 0]);\r\n}\r\n;\r\n/**\r\n * Draws some text at coordinates (xCoord, yCoord).\r\n * The function also has some logic to prevent the text from going outside the borders of the canvas\r\n * @date 2021-06-13\r\n * @param {CanvasRenderingContext2D} context\r\n * @param {string} text: text to write\r\n * @param {number} xCoord: where to write\r\n * @param {number} yCoord: where to write\r\n * @param {boolean} isInRightPlane: captures relative position with respective to user coordinates system\r\n * @param {boolean} isInUpPlane: captures relative position with respective to user coordinates system\r\n * @returns {void}\r\n */\r\nfunction addCoordinates(context, text, xCoord, yCoord, isInRightPlane = true, isInUpPlane = true) {\r\n    if (!context || !text)\r\n        return;\r\n    if (!xCoord)\r\n        xCoord = 0;\r\n    if (!yCoord)\r\n        yCoord = 0;\r\n    // Prepare pen\r\n    const margin = 12;\r\n    context.font = `${margin - 2}px Arial`;\r\n    // Logic to align text not to overflow on canvas\r\n    // const isInUpPlane = yCoord > 0;\r\n    // const isInRightPlane = xCoord > 0;\r\n    context.textAlign = \"center\";\r\n    context.textAlign = isInRightPlane ? \"right\" : \"left\";\r\n    // Write text\r\n    context.fillText(text, xCoord + margin * (isInRightPlane ? -1 : 1), yCoord - margin * (isInUpPlane ? -1 : 1));\r\n}\r\n/**\r\n * Draws an arrow: A line that start at (fromx, fromy), ends at (tox, toy). A small arrow is added at (tox, toy)\r\n * @date 2021-06-13\r\n * @param {CanvasRenderingContext2D} context\r\n * @param {number} fromx:number\r\n * @param {number} fromy:number\r\n * @param {number} tox:number\r\n * @param {number} toy:number\r\n * @returns {void}\r\n */\r\nfunction drawCanvasArrow(context, fromx, fromy, tox, toy) {\r\n    if (!context || !fromx || !fromy || !tox || !toy)\r\n        return;\r\n    if (tox == fromx && toy == fromy)\r\n        return;\r\n    var headlen = 10; // length of arrow head in pixels\r\n    var dx = tox - fromx;\r\n    var dy = toy - fromy;\r\n    var angle = Math.atan2(dy, dx); // line angle with horizontal\r\n    // Draw line\r\n    context.moveTo(fromx, fromy);\r\n    context.lineTo(tox, toy);\r\n    // Draw one side of arrow head\r\n    context.lineTo(tox - headlen * Math.cos(angle - Math.PI / 6), toy - headlen * Math.sin(angle - Math.PI / 6));\r\n    context.moveTo(tox, toy);\r\n    // Draw the other side of arrow head\r\n    context.lineTo(tox - headlen * Math.cos(angle + Math.PI / 6), toy - headlen * Math.sin(angle + Math.PI / 6));\r\n}\r\n/**\r\n * Draws a vector using its polar representation.\r\n * If `doAddCoords` is true, adds the text representation of its coordinates on the canvas\r\n * @date 2021-06-13\r\n * @param {TCanvasParameters} canvasData:\r\n * @param {number} length:number\r\n * @param {number} degreeAngleToHorizontal:number\r\n * @param {boolean} doAddCoords=false\r\n * @returns {any}\r\n */\r\nfunction drawPolarVector(canvasData, length, degreeAngleToHorizontal, doAddCoords = false) {\r\n    // Converts to cartesian representation. Our drawing function works with cartesian coordinates.\r\n    const cartesianVector = toCartesian({ radius: length, degreeAngle: degreeAngleToHorizontal });\r\n    // Draw the vector with the polar text representation of the coordinates\r\n    drawCartesianVector(canvasData, cartesianVector.x, cartesianVector.y, doAddCoords, `${formatNumber(length)} ∠ ${formatNumber(degreeAngleToHorizontal)}°`);\r\n}\r\n/**\r\n * Draws a vector using its cartesian representation.\r\n * If `doAddCoords` is true, adds the `label` string on the canvas\r\n * @date 2021-06-13\r\n * @param {TCanvasParameters} canvasData:TCanvasParameters\r\n * @param {number} xComponent:number\r\n * @param {number} yComponent:number\r\n * @param {boolean} doAddCoords=false\r\n * @param {string} label?:string\r\n * @returns {void}\r\n */\r\nfunction drawCartesianVector(canvasData, xComponent, yComponent, doAddCoords = false, label) {\r\n    if (xComponent == 0 && yComponent == 0)\r\n        return;\r\n    // Draw the arrow representing the vector\r\n    drawCanvasArrow(canvasData.context, canvasData.xCenter, canvasData.yCenter, canvasData.xCenter + canvasData.xUnit * xComponent, canvasData.yCenter - canvasData.yUnit * yComponent);\r\n    // Add label to canvas\r\n    if (doAddCoords)\r\n        addCoordinates(canvasData.context, label ? label : `(${formatNumber(xComponent)}, ${formatNumber(yComponent)})`, canvasData.xCenter + canvasData.xUnit * xComponent, canvasData.yCenter - canvasData.yUnit * yComponent, xComponent > 0, yComponent < 0);\r\n}\r\n/**\r\n * Draws a vector on the canvas. If `usePolarForm` is true, its polar representation is computed and drawn.\r\n * @date 2021-06-13\r\n * @param {boolean} usePolarForm:\r\n * @param {TCanvasParameters} canvasData:\r\n * @param {number} xComponent:\r\n * @param {number} yComponent:\r\n * @param {boolean} doAddCoords=false\r\n * @param {string} label?:\r\n * @returns {void}\r\n */\r\nfunction drawVector(usePolarForm, canvasData, xComponent, yComponent, doAddCoords = false, label) {\r\n    // If we are to draw the cartesian form, draw and leave early\r\n    if (!usePolarForm)\r\n        return drawCartesianVector(canvasData, xComponent, yComponent, doAddCoords, label);\r\n    // Compute and draw polar represnetaiton\r\n    const polar = toPolar({ x: xComponent, y: yComponent });\r\n    return drawPolarVector(canvasData, polar.radius, polar.degreeAngle, doAddCoords);\r\n}\r\n;\r\n/**\r\n * Higher order function that returns a function that will draw a set of vectors (in cartesian form) on the canvas using the reprensentation\r\n * prescribed by `usePolarForm`\r\n * @date 2021-06-13\r\n * @param {boolean} usePolarForm:\r\n * @param {TCanvasParameters} canvasData:\r\n * @returns {(vectorsToDraw: TCartesianVector[], penColor?: string) => void} Function to draw an array of vectors\r\n */\r\nfunction getBulkVectorsDrawer(usePolarForm, canvasData) {\r\n    // Choose the correct function that will draw given `usePolarForm`\r\n    const drawFunction = drawVector.bind(null, usePolarForm);\r\n    // Return new function that will take an array of vectors and a color, and will draw them on the canvas\r\n    return (vectorsToDraw, penColor = \"#000\", penWidth = 1) => {\r\n        // Prepare pen\r\n        canvasData.context.lineWidth = penWidth || 1;\r\n        canvasData.context.strokeStyle = penColor;\r\n        canvasData.context.beginPath();\r\n        // draw each vector in the array\r\n        vectorsToDraw.forEach((vector) => drawFunction(canvasData, vector.x, vector.y, true));\r\n        // Finish the drawing\r\n        canvasData.context.stroke();\r\n        // canvasData.context.strokeStyle = strokeNormalColor;\r\n    };\r\n}\r\n/**\r\n * Compute a `canvas-unit` that will ensure that all the vectors in `arr` can be drawn without overflowing on the canvas.\r\n * `canvas-unit` defaults to `10`\r\n * @date 2021-06-13\r\n * @param {number} canvasWidth:\r\n * @param {TCartesianVector[]} vectors:\r\n * @returns {number}: The `canvas-unit`\r\n */\r\nconst getUnit = (canvasWidth, vectors) => (!vectors ? 10 : 0.4 * (canvasWidth || 300) / vectors.reduce((acc, item) => Math.max(acc, Math.abs(item.x), Math.abs(item.y)), 1));\r\nexport { drawCanvasAxis, clearCanvas, drawCartesianVector, drawPolarVector, getBulkVectorsDrawer, getUnit };\r\n// context.lineWidth = 1;\r\n// context.setLineDash([5, 0]);\r\n// context.beginPath();\r\n// cartesianVector(context, 20, 10, true);\r\n// cartesianVector(context, 20, 20, true);\r\n// cartesianVector(context, -20, -10, true);\r\n// cartesianVector(context, -20, -20, true);\r\n// cartesianVector(context, 20, -10, true);\r\n// cartesianVector(context, 20, -20, true);\r\n// cartesianVector(context, -20, 10, true);\r\n// cartesianVector(context, -20, 20, true);\r\n// polarVector(context, 20, 60, true);\r\n// polarVector(context, 20, 120, true);\r\n// polarVector(context, 20, -60, true);\r\n// polarVector(context, 20, -120, true);\r\n// context.stroke();\r\n","<script lang=\"ts\">\nimport { onMount, tick } from \"svelte\";\nimport { clearCanvas, drawCanvasAxis, getUnit } from \"../utils/canvas.utils\";\nimport { buildCanvasData } from \"./VectorCanvas.utils\";\n\nimport type { TCanvasParameters } from \"../utils/canvas.types\";\nimport type { TCartesianVector } from \"../utils/vector.types\";\n\n\n\n\n\nexport let vectors: TCartesianVector[];\nexport let resultant: TCartesianVector;\nexport let getBulkDrawer: Function;\n\n\n\n\n\n/** Logic to get a handle on the canvas object */\nlet canvas: TCanvasParameters = null;\nlet canvasWidth = 500;\nlet canvasHeight = 500;\nlet canvasNode: HTMLCanvasElement = null;\nconst setupCanvas = (canvasNode: HTMLCanvasElement) => {\n\n\t// Compute dimension to ensure the canvas html node is always a square\n\tconst dimension = Math.min(canvasNode.clientHeight, canvasNode.clientWidth);\n\n\t// Compute a canvas unit to prevent drawings to overflow\n\tconst unit = getUnit(dimension, [...vectors, resultant]);\n\n\t// Build a proxy for the canvas object\n\tcanvas = buildCanvasData(canvasNode, unit, dimension);\n\n\t// Update canvas internal dimension (to prevent blurry images)\n\tcanvasWidth = dimension;\n\tcanvasHeight = dimension;\n}\nonMount(()=>setupCanvas(canvasNode));\nwindow.addEventListener('resize', ()=>setupCanvas(canvasNode));\n\n\n/** Logic to redraw reactively when the data for the canvas change*/\nconst operandsCanvasColor = \"#555\";\nconst resultantCanvasColor = \"#00617F\";//\"#b1289a\";\n$: canvas && vectors && getBulkDrawer && setupCanvas(canvasNode);\n$: canvas && vectors && getBulkDrawer && tick().then(() => { clearCanvas(canvas); drawCanvasAxis(canvas) });\n$: canvas && vectors && tick().then(() => { \n\t// Draw operand vectors\n\tgetBulkDrawer(canvas)(vectors, operandsCanvasColor); \n\t// Draw resultant vector\n\tgetBulkDrawer(canvas)([resultant], resultantCanvasColor, 3); \n});\n</script>\n\n\n<canvas  id=\"canvas\" width={canvasWidth} height={canvasHeight} class=\"canvas\" bind:this={canvasNode}>\n\tYour browser does not support the canvas element.\n</canvas> \n\n\n<style>\ncanvas{\n\tborder: 1px solid #c3c3c3; \n\tmax-width: 100%; \n\twidth: 100%; \n\tmargin: 0 auto; \n\t/* background: #eee;  */\n\tdisplay: block;\n\tmargin-bottom: .5rem;\n}\n</style>","/**\r\n * Build a proxy object for the `VectorCanvas` component to interact with the canvas object\r\n * @date 2021-06-13\r\n * @param {any} canvasNode:HTMLCanvasElement\r\n * @param {any} unit:number\r\n * @param {any} dimension:number\r\n * @returns {any}\r\n */\r\nconst buildCanvasData = (canvasNode, unit, dimension) => ({\r\n    node: canvasNode,\r\n    context: canvasNode.getContext(\"2d\"),\r\n    xCenter: dimension / 2,\r\n    yCenter: dimension / 2,\r\n    xUnit: unit,\r\n    yUnit: unit\r\n});\r\nexport { buildCanvasData };\r\n","<script lang=\"ts\">\nimport { tick } from \"svelte\";\nimport Modal from \"./components/Modal.svelte\";\nimport About from \"./components/About.svelte\";\nimport TitleBar from \"./components/TitleBar.svelte\";\nimport MenuBar from \"./components/MenuBar.svelte\";\nimport Operands from \"./components/Operands.svelte\";\nimport Results from \"./components/Results.svelte\";\nimport VectorCanvas from \"./components/VectorCanvas.svelte\";\nimport { operandFromVector, operandEditorProxyHOF, operandToVector, sumOperands } from \"./components/Operands.utils\";\nimport { getBulkVectorsDrawer as _getBulkVectorsDrawer } from \"./utils/canvas.utils\";\nimport { scrollToBottom, vectorToTex } from \"./App.utils\";\nimport type { TOperands} from \"./components/Operands.types\";\nimport type { TCartesianVector } from \"./utils/vector.types\";\n\n/** Compute Resultant logic*/\nlet operands: TOperands = [];\n$: vectors = operands.map(operandToVector);\n\nlet resultant: TCartesianVector = {x: 0, y: 0};\n$: resultant = operands.reduce(sumOperands, {x: 0, y: 0});\n\n\n\n\n/** Modal Logic*/\nlet isModalVisible = false;\nconst showInfoModal = () => isModalVisible = true;\nconst closeInfoModal = () => isModalVisible = false;\n\n\n\n\nlet doUsePolarForm = false;\n\n/** Canvas Logic */\n$: getDrawerForCurrentRepresentation = _getBulkVectorsDrawer.bind(null, doUsePolarForm);\n\n\n/** Tex Logic */\n$: vectorRepresentationToTex = vectorToTex.bind(null, doUsePolarForm);\n\n\n/** Operand Editor Logic*/\n$: operandEditorProxy = operandEditorProxyHOF(\n\tdoUsePolarForm, \n\tindexToGet => operands[indexToGet], \n\t(newOperandValue, newOperandIndex) => operands = operands.map((op, idx) => idx !== newOperandIndex ? op : newOperandValue),\n\tindexToDelete =>  operands = operands.filter((op, idx) => idx !== indexToDelete)\n);\n\n\n/** Menu Action Handlers*/\nlet operandsContainer: HTMLElement = null;\nconst handleMenuAction = (action: string)=>{\n\tif(action == 'reset') { operands = []; resultant = {x: 0, y: 0}; return; }\n\tif(action == 'new-session') { operands = [operandFromVector(resultant.x, resultant.y)]; resultant = {x: 0, y: 0};  return; }\n\tif(action == 'new-operand') { operands = [...operands, operandFromVector()]; resultant = {x: 0, y: 0}; tick().then(()=> scrollToBottom(operandsContainer)); return; }\n}\n</script>\n\n\n\n\n<header>\n\t<TitleBar on:showInfo={showInfoModal}/>\n</header>\n\n<main>\n\t<div id=\"results-container\" class=\"debug\">\n\t\t<Results vectorToTex={vectorRepresentationToTex} {resultant}  >\n\t\t\t<VectorCanvas slot=\"canvas\" {vectors} {resultant} getBulkDrawer={getDrawerForCurrentRepresentation}/> \n\t\t</Results>\n\t</div>\n\n\n\t<div id=\"inputs-container\" bind:this={operandsContainer}>\n\t\t<Operands bind:editorProxy={operandEditorProxy} vectorToTex={vectorRepresentationToTex} data={operands} on:newOperand={()=>handleMenuAction(\"new-operand\")} />\n\t</div>\n\t<div id=\"menu-items-container\">\n\t\t<MenuBar  bind:usePolarForm={doUsePolarForm} on:selection={e => handleMenuAction(e.detail)}/>\n\t</div>\n</main>\n\n<footer class=\"footer\">\n\t<About/>\n</footer>\n\n<Modal bind:isVisible={isModalVisible} on:close={closeInfoModal}/>\n\n\n\n\n\n<style>\n/** Global styles */\n:global(:root){\n\t--color-primary-lighter: #fafafa;\n\t--color-primary-light: #eee;\n\t--color-primary-light2: #ccc;\n\t--color-primary-gray: #999;\n\t--color-primary-dark: #333;\n\t--color-secondary-lighter: #d9f6ff;\n\t--color-secondary-light: #a3eaff;\n\t--color-secondary: #24a5cc;\n\t--color-secondary-dark: #00617f;\n\t--color-secondary-darker: #004e66;\n\t--color-accent-lighter: #ffdbf9;\n\t--color-accent-lighter3: #fff5fd;\n\t--color-accent-lighter2: #ffc5f5;\n\t--color-accent-light: #fdbcf2;\n\t--color-accent: #b1289a;\n\t--color-accent-dark: #5A0B4D;\n}\n\n\n\n\n/** Main Sections layout styles + responsiveness */\nheader{\n\tpadding: .5rem 1rem;\n\tbackground: #333;\n\tbackground: var(--color-secondary-dark);\n\tcolor: #eee;\n\tcolor: var(--color-secondary-light);\n}\n\nmain{\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\tflex: 1 1 50vh;\n}\n\n#results-container{\n\tmax-width: min(50vh, 100%);\n\tmax-width: min(40vh, 100%);\n\tmargin: 0 auto;\n\tpadding: 1rem;\n\toverflow: auto;\n\twidth: 100%;\n}\n\n#inputs-container{\n\tpadding: 1rem;\n\tflex: 1 1 2rem;\n\tbackground: #fafafa;\n\tbackground: var(--color-primary-lighter);\n\toverflow-y: auto;\n}\n\n#inputs-container, \n:global(.menu-items-container__inner){\n\tmax-width: 500px;\n\twidth: 100%;\n\tmargin: 0 auto;\n}\n\n#menu-items-container{\n\tbackground: #f5f5f5;\n\tbackground: var(--color-secondary-dark);\n\tpadding: 0 1rem;\n}\n\n.footer{\n\tdisplay: none;\n\tfont-size: .8rem;\n\twidth: 40vw;\n\tline-height: 1.6;\n\ttext-align: center;\n\twidth: 100%;\n\tpadding: 2rem 0;\n}\n\n\n\n@media screen and (min-width: 640px) {\n\tmain{\n\t\tflex-wrap: wrap;\n\t\tmax-width: 100%;\n\t\tpadding: 1rem 3rem;\n\t}\n\t#results-container{\n\t\tflex: 0 0 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\tmax-width: 500px;\n\t\theight: 100%;\n\t}\n\t#results-container,\n\t#menu-items-container,\n\t#inputs-container{\n\t\twidth: 50%;\n\t}\n\t#menu-items-container,\n\t#inputs-container{\n\t\tmax-width: 500px;\n\t\tmin-width: 320px;\n\t}\n\t#menu-items-container{\n\t\tmargin: 0 auto;\n\t}\n\t.footer{\n\t\tdisplay: block;\n\t\tmargin: 0 auto;\n\t\tmax-width: min(60vw, 500px);\n\t}\n}\n</style>","import App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body,\r\n    props: null\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_input_value","input","current_component","set_current_component","get_current_component","Error","onMount","on_mount","afterUpdate","after_update","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","update","pop","has","add","clear","fragment","before_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","outro_and_destroy_block","lookup","key","bind","index","props","bound","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","detaching","init","instance","create_fragment","not_equal","parent_component","on_disconnect","context","Map","skip_bound","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","indexOf","splice","$$props","obj","$$set","keys","isVisible","dispatch","forceMathjaxRender","_a","window","MathJax","typeset","resetMathjaxNode","innerHtmlWithTexString","innerHTML","typesetClear","degreesToRadians","PI","radiansFromDegrees","degrees","getModulus","v","isInPolarForm","radius","sqrt","pow","x","y","toCartesian","polar","cos","degreeAngle","sin","toPolar","radians","atan2","scalarCartesianProduct","scalar","vectorToTex","usePolarForm","vector","xComponent","yComponent","toFixed","polarRadius","polarDegreeAngle","problematicValues","hasProblematicValue","args","some","arg","includes","areNumericObjectsEqual","obj1","obj2","epsilon","Number","EPSILON","reduce","acc","num1","num2","abs","areNumbersAlmostEqual","injectVHInCSS","vh","innerHeight","documentElement","style","setProperty","checked","extraClasses","onSelection","action","subscriber_queue","nodeId","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","writable","id","Date","getTime","$nodeId","mathjaxExpression","mathjaxDOMNode","trueText","falseText","slots","result","actualId","onChangeHandler","ev","currentTarget","wholeText","label","placeholder","multiplier","component1","component2","labels","keyValue","updatedVector","parseFloat","operandFromVector","isAddedToPrevious","scalarMultiplier","operandToVector","op","sumOperands","addCartesianVectors","v1","v2","operandEditorProxyHOF","getOperand","setOperand","deleteOperand","cartesianLabels","polarLabels","getLabels","getComponent","setComponent","newValues","sign","t","prototype","hasOwnProperty","getOwnPropertySymbols","propertyIsEnumerable","__rest","deleteComponent","toUnitVector","isAdded","timerHandler","operand","editorProxy","containerNode","isEditing","scrollIntoView","behavior","inline","texVector","clearTimeout","setTimeout","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","will_move","did_move","first","new_block","old_block","new_key","old_key","resultant","strokeNormalColor","formatNumber","num","drawCanvasAxis","xCenter","yCenter","canvasWidth","canvasHeight","lineWidth","setLineDash","strokeStyle","beginPath","moveTo","lineTo","stroke","_drawCanvasAxis","width","height","drawCartesianVector","canvasData","doAddCoords","fromx","fromy","tox","toy","dx","dy","angle","drawCanvasArrow","xUnit","yUnit","xCoord","yCoord","isInRightPlane","isInUpPlane","font","textAlign","fillText","addCoordinates","drawVector","degreeAngleToHorizontal","cartesianVector","drawPolarVector","getBulkVectorsDrawer","drawFunction","vectorsToDraw","penColor","penWidth","vectors","getBulkDrawer","canvas","canvasNode","setupCanvas","dimension","min","clientHeight","clientWidth","unit","item","getUnit","getContext","buildCanvasData","clearRect","_clearCanvas","clearCanvas","operands","isModalVisible","doUsePolarForm","operandsContainer","handleMenuAction","scrollToBottom","scrollTo","scrollHeight","operandEditorProxy","indexToGet","newOperandValue","newOperandIndex","idx","indexToDelete","getDrawerForCurrentRepresentation","_getBulkVectorsDrawer","vectorRepresentationToTex","body"],"mappings":"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"}